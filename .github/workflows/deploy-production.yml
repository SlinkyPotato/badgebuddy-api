#file: noinspection YAMLSchemaValidation
name: Deploy Production
on:
  push:
    branches:
      - main
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
      - uses: pnpm/action-setup@v2
      - run: git config user.name "github-action[bot]"
      - run: git config user.email "<>"
      - run: npx standard-version > changes.md
      - run: node parse-changes.js
      - name: Retrieve package version
        id: package-version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: 'package.json'
          prop_path: 'version'
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: |
            solidchain/badge-buddy-api:latest
      - run: docker cp (docker run -d --rm solidchain/badge-buddy-api:latest):/app/dist ./dist
      - name: Push Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            solidchain/badge-buddy-api:latest
            solidchain/badge-buddy-api:${{ steps.package-version.outputs.prop }}
      - name: Transfer compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          source: "compose.yml"
          target: "${{ secrets.APP_PATH_PRODUCTION }}"
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        env:
          DOTENV_KEY: "${{ secrets.DOTENV_KEY_PRODUCTION }}"
          NODE_VERSION: "${{ needs.prepare-versions.outputs.node }}"
          PNPM_VERSION: "${{ needs.prepare-versions.outputs.pnpm }}"
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          envs: DOTENV_KEY,NODE_VERSION,PNPM_VERSION
          script: |
            cd ${{ secrets.APP_PATH_PRODUCTION }}
            docker compose --profile production pull
            docker compose --profile production stop
            docker compose --profile production up -d
      - run: git push --follow-tags
      - run: gh release create -F parsed.md -t "v${{ steps.package-version.outputs.prop } Release"--verify-tag v${{ steps.package-version.outputs.prop }} dist.zip
      - run: git checkout dev
      - run: git merge --no-ff main -m "sync branch main v${{ needs.build-deploy-docker.outputs.package }} into dev" | exit 0
      - run: git push
